# Note: There is a -1st row and column, and a 5th row and column.
# These rows and collumns function as 0 paddings so that the indices will not be out of bounds

set I = -1 .. 5;

set R = -1 .. 1;

var X {I, I}, binary;

# paddings must be zeros
s.t. firstRow: sum {i in I} X[-1, i] = 0;
s.t. lastRow: sum {i in I} X[5, i] = 0;
s.t. firstCol: sum {i in I} X[i, -1] = 0;
s.t. lastCol: sum {i in I} X[i, 5] = 0;

# actual conditions for the game
# (the first part of the statement reflects the row, the second part of the statement reflects the column)
s.t. zero_zero: sum {i in R} sum {j in R} X[0+i, 0+j] = [-1, -1];
s.t. zero_one: sum {i in R} sum {j in R} X[0+i, 1+j] = [1, 1];
s.t. zero_two: sum {i in R} sum {j in R} X[0+i, 2+j] = [-1, -1];
s.t. zero_three: sum {i in R} sum {j in R} X[0+i, 3+j] = [-1, -1];
s.t. zero_four: sum {i in R} sum {j in R} X[0+i, 4+j] = [-1, -1];
s.t. one_zero: sum {i in R} sum {j in R} X[1+i, 0+j] = [-1, -1];
s.t. one_one: sum {i in R} sum {j in R} X[1+i, 1+j] = [-1, -1];
s.t. one_two: sum {i in R} sum {j in R} X[1+i, 2+j] = [-1, -1];
s.t. one_three: sum {i in R} sum {j in R} X[1+i, 3+j] = [-1, -1];
s.t. one_four: sum {i in R} sum {j in R} X[1+i, 4+j] = [-1, -1];
s.t. two_zero: sum {i in R} sum {j in R} X[2+i, 0+j] = [-1, -1];
s.t. two_one: sum {i in R} sum {j in R} X[2+i, 1+j] = [-1, -1];
s.t. two_two: sum {i in R} sum {j in R} X[2+i, 2+j] = [-1, -1];
s.t. two_three: sum {i in R} sum {j in R} X[2+i, 3+j] = [-1, -1];
s.t. two_four: sum {i in R} sum {j in R} X[2+i, 4+j] = [-1, -1];
s.t. three_zero: sum {i in R} sum {j in R} X[3+i, 0+j] = [-1, -1];
s.t. three_one: sum {i in R} sum {j in R} X[3+i, 1+j] = [-1, -1];
s.t. three_two: sum {i in R} sum {j in R} X[3+i, 2+j] = [-1, -1];
s.t. three_three: sum {i in R} sum {j in R} X[3+i, 3+j] = [-1, -1];
s.t. three_four: sum {i in R} sum {j in R} X[3+i, 4+j] = [-1, -1];
s.t. four_zero: sum {i in R} sum {j in R} X[4+i, 0+j] = [-1, -1];
s.t. four_one: sum {i in R} sum {j in R} X[4+i, 1+j] = [-1, -1];
s.t. four_two: sum {i in R} sum {j in R} X[4+i, 2+j] = [-1, -1];
s.t. four_three: sum {i in R} sum {j in R} X[4+i, 3+j] = [-1, -1];
s.t. four_four: sum {i in R} sum {j in R} X[4+i, 4+j] = [-1, -1];
